{"version":3,"file":"component---src-templates-section-posts-js-230f1e39a6752e2da24c.js","mappings":"+MA8FA,UApFoB,IAAsC,IAAD,MAApC,KAAEA,EAAI,SAAEC,EAAQ,YAAEC,GAAa,EAChD,MAAMC,GAAkC,QAAtB,EAAAH,EAAKI,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQP,EAAKQ,kBAAkBC,MAC/BC,EAAaV,EAAKW,aAAaC,MAC/BC,EAAWb,EAAKc,YAAYF,OAC5B,QAAEG,GAAYb,EAEpB,OAAqB,IAAjBK,EAAMS,OAEF,gBAAC,IAAM,CAACf,SAAUA,EAAUK,MAAOH,GAC/B,gBAAC,IAAG,MACJ,iDAMR,gCACI,gBAAC,IAAG,CAACG,MAAK,IAAMS,EAAO,cAAgB,IACvC,gBAAC,IAAM,CAACd,SAAUA,EAAUK,MAAOH,EAAWU,SAAUA,EAAUH,WAAYA,GAC1E,gBAAC,IAAY,CAACH,MAAOA,IACrB,uBAAKU,UAAU,0DACVV,EAAMW,KAAIC,IAAS,IAAD,EACf,MAAMb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KAC9CC,EAC2B,QADf,EACdJ,EAAKC,YAAYG,oBAAY,aAA7B,EAA+BC,gBAAgBC,MAEnD,OACI,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACjC,uBACIC,IAAKV,EAAKE,OAAOC,KACjBL,UAAU,wHAEV,2BACIa,WAAS,EACTC,SAAS,4BACTd,UAAU,qBAETM,EACG,uBAAKN,UAAU,+BACX,gBAAC,IAAW,CACRQ,MAAOF,EACPN,UAAU,8BAIlB,GAEJ,uBAAKA,UAAU,2BACX,0BAAQA,UAAU,QACd,sBAAIA,UAAU,kDACV,wBAAMW,SAAS,WAAWX,UAAU,cAC/BX,IAGT,wBAAMW,UAAU,oBACXE,EAAKC,YAAYY,MAEtB,wBAAMf,UAAU,wCACXE,EAAKC,YAAYa,WAG1B,2BAAShB,UAAU,cACf,qBACIA,UAAU,qBACViB,wBAAyB,CACrBC,OACIhB,EAAKC,YAAYgB,aAAejB,EAAKkB,SAE7CT,SAAS,oBAM1B,MAKxB,C","sources":["webpack://gatsby-starter-blog/./src/templates/section-posts.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport PostCalender from \"../components/calender/PostCalender\"\nimport Seo from \"../components/seo\"\nimport GatsbyImage from \"gatsby-image\"\nimport \"../tailwind.css\"\n\nconst SectionPost = ({ data, location, pageContext }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const posts = data.allMarkdownRemark.nodes\n    const categories = data.categoryList.group\n    const sections = data.sectionList.group;\n    const { section } = pageContext\n\n    if (posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Bio />\n                <p>블로그 포스트를 찾을 수 없습니다.</p>\n            </Layout>\n        )\n    }\n\n    return (\n        <>\n            <Seo title={`\"${section}\"의 게시글 목록`} />{\" \"}\n            <Layout location={location} title={siteTitle} sections={sections} categories={categories}>\n                <PostCalender posts={posts} />\n                <div className=\"grid lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-x-4\">\n                    {posts.map(post => {\n                        const title = post.frontmatter.title || post.fields.slug\n                        const thumbnailImg =\n                            post.frontmatter.thumbnailImg?.childImageSharp.fluid\n\n                        return (\n                            <Link to={post.fields.slug} itemProp=\"url\">\n                                <div\n                                    key={post.fields.slug}\n                                    className=\"h-80 flex justify-between justify-items-center border-2 rounded-md shadow-md my-4 hover:bg-slate-100 hover:shadow-xl\"\n                                >\n                                    <article\n                                        itemScope\n                                        itemType=\"http://schema.org/Article\"\n                                        className=\"flex flex-col p-4\"\n                                    >\n                                        {thumbnailImg ? (\n                                            <div className=\"max-w-full w-full h-[116px]\">\n                                                <GatsbyImage\n                                                    fluid={thumbnailImg}\n                                                    className=\"rounded-md h-full w-full\"\n                                                />\n                                            </div>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        <div className=\"flex-auto flex flex-col\">\n                                            <header className=\"mb-2\">\n                                                <h2 className=\"listItemTitle mt-2 text-main text-2xl max-h-16\">\n                                                    <span itemProp=\"headline\" className=\"font-title\">\n                                                        {title}\n                                                    </span>\n                                                </h2>\n                                                <span className=\"text-sub text-sm\">\n                                                    {post.frontmatter.date}\n                                                </span>\n                                                <span className=\"ml-2 font-bold text-gray-400 text-sm\">\n                                                    {post.frontmatter.category}\n                                                </span>\n                                            </header>\n                                            <section className=\"max-h-full\">\n                                                <p\n                                                    className=\"listItemTitle mb-0\"\n                                                    dangerouslySetInnerHTML={{\n                                                        __html:\n                                                            post.frontmatter.description || post.excerpt,\n                                                    }}\n                                                    itemProp=\"description\"\n                                                />\n                                            </section>\n                                        </div>\n                                    </article>\n                                </div>\n                            </Link>\n                        )\n                    })}\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nexport default SectionPost\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\n\nexport const pageQuery = graphql`\n  query ($section: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    categoryList: allMarkdownRemark {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n    }\n    sectionList: allMarkdownRemark {\n      group(field: frontmatter___section) {\n        fieldValue\n        totalCount\n      }\n    }\n    allMarkdownRemark(\n        sort: { frontmatter: { date: DESC } }\n        filter: {frontmatter: {section: {eq: $section}}}\n        ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnailImg {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          section\n          category\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","categories","categoryList","group","sections","sectionList","section","length","className","map","post","frontmatter","fields","slug","thumbnailImg","childImageSharp","fluid","Link","to","itemProp","key","itemScope","itemType","date","category","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}