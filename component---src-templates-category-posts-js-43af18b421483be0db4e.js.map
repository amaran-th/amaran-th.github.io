{"version":3,"file":"component---src-templates-category-posts-js-43af18b421483be0db4e.js","mappings":"oMAgGA,UAvFqB,IAAsC,IAAD,MAApC,KAAEA,EAAI,SAAEC,EAAQ,YAAEC,GAAa,EACnD,MAAMC,GAAkC,QAAtB,EAAAH,EAAKI,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQP,EAAKQ,kBAAkBC,MAC/BC,EAAaV,EAAKW,aAAaC,OAC/B,SAAEC,GAAaX,EAErB,OAAqB,IAAjBK,EAAMO,OAEN,gBAAC,IAAM,CAACb,SAAUA,EAAUK,MAAOH,GACjC,gBAAC,IAAG,MACJ,iDAMJ,gBAAC,IAAM,CACLF,SAAUA,EACVK,MAAOH,EACPO,WAAYA,EACZK,gBAAiBF,GAEjB,gBAAC,IAAG,CAACP,MAAK,SAAWO,EAAQ,cAAgB,IAE7C,wBAAMG,UAAU,gCACbH,EAAQ,IAAGN,EAAMO,OAAM,KAE1B,sBAAIE,UAAU,SAEd,sBAAIC,MAAO,CAAEC,UAAU,SACpBX,EAAMY,KAAIC,IAAS,IAAD,EACjB,MAAMd,EAAQc,EAAKC,YAAYf,OAASc,EAAKE,OAAOC,KAE9CC,EACyB,QADb,EAChBJ,EAAKC,YAAYG,oBAAY,aAA7B,EAA+BC,gBAAgBC,MAEjD,OACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,sBACEC,IAAKV,EAAKE,OAAOC,KACjBP,UAAU,uGAEV,2BACEA,UAAU,GACVe,WAAS,EACTC,SAAS,6BAET,0BAAQhB,UAAU,QAChB,sBAAIA,UAAU,sCACZ,wBAAMa,SAAS,YAAYvB,IAE7B,wBAAMU,UAAU,oBACbI,EAAKC,YAAYY,KAClB,wBAAMjB,UAAU,wCACbI,EAAKC,YAAYR,WAEd,KAEV,+BACE,qBACEG,UAAU,OACVkB,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,SAE/CR,SAAS,kBAIdL,EACC,uBAAKR,UAAU,2BACb,gBAAC,IAAW,CACVU,MAAOF,EACPR,UAAU,8BAId,IAGC,KAIN,C","sources":["webpack://gatsby-starter-blog/./src/templates/category-posts.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport GatsbyImage from \"gatsby-image\"\nimport \"../tailwind.css\"\n\nconst CategoryPost = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const categories = data.categoryList.group\n  const { category } = pageContext\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>블로그 포스트를 찾을 수 없습니다.</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      categories={categories}\n      currentCategory={category}\n    >\n      <Seo title={`카테고리 [${category}]의 게시글 목록`} />{\" \"}\n      {/* 페이지 title 수정 */}\n      <span className=\"text-main text-xl font-bold \">\n        {category}({posts.length})\n      </span>\n      <hr className=\"my-2\" />\n      {/* 현재 카테고리 표시 */}\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          const thumbnailImg =\n            post.frontmatter.thumbnailImg?.childImageSharp.fluid\n\n          return (\n            <Link to={post.fields.slug} itemProp=\"url\">\n              <li\n                key={post.fields.slug}\n                className=\"flex justify-between justify-items-center border-2 rounded-md shadow-md p-4 my-4 hover:bg-slate-100\"\n              >\n                <article\n                  className=\"\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header className=\"mb-4\">\n                    <h2 className=\"mt-2 text-main text-3xl font-title\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </h2>\n                    <span className=\"text-sub text-sm\">\n                      {post.frontmatter.date}\n                      <span className=\"font-bold mx-2 text-gray-400 text-sm\">\n                        {post.frontmatter.category}\n                      </span>\n                    </span>{\" \"}\n                  </header>\n                  <section>\n                    <p\n                      className=\"mb-0\"\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n                {thumbnailImg ? (\n                  <div className=\"min-w-[150px] h-[150px]\">\n                    <GatsbyImage\n                      fluid={thumbnailImg}\n                      className=\"rounded-xl h-full w-full\"\n                    />\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </li>\n            </Link>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default CategoryPost\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\n\nexport const pageQuery = graphql`\n  query ($category: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    categoryList: allMarkdownRemark {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnailImg {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          category\n          section\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","categories","categoryList","group","category","length","currentCategory","className","style","listStyle","map","post","frontmatter","fields","slug","thumbnailImg","childImageSharp","fluid","Link","to","itemProp","key","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}